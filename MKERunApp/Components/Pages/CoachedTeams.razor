@page "/CoachedTeams"

@using MKERunApp.Components.Coach

@inject ISnackbar Snackbar
@inject UserManager<ApplicationUser> UserManager
@inject AuthenticationStateProvider AuthenticationStateProvider

@if (User is not null)
{
    <div style="display:inline-block">
        <MudButton EndIcon="@Icons.Material.Filled.Add"
                   Variant="Variant.Filled"
                   Color="Color.Tertiary"
                   OnClick="PressNew"
                   UserAttributes="@(new() {{"id", "new-button"}})">
            New
        </MudButton>

        <MudPopover AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter" Open=OpenNewTeamForm Fixed>
            <MudPaper Class="pa-2">
                <TeamForm User="User" @bind-Show=OpenNewTeamForm @bind-Teams=User.CoachedTeams />
            </MudPaper>
        </MudPopover>
    </div>
    @foreach(Team team in User.CoachedTeams)
    {
        @team.Name
    }
}



@code {
    private ApplicationUser? User;
    private bool OpenNewTeamForm;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            User = await UserAccessService.LoadUser(UserManager, AuthenticationStateProvider);
        }
        catch
        {
            Snackbar.Add("Failed to load the User.", Severity.Error);
        }
        StateHasChanged();
    }

    private void PressNew()
    {
        OpenNewTeamForm = !OpenNewTeamForm;
    }
}
