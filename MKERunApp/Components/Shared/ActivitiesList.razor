<style>
    .mud-expand-panel-header {
        padding-left: 0 !important;
        padding-bottom: 0 !important;
        padding-top: 0 !important;
    }
</style>

<MudExpansionPanels MultiExpansion Elevation="25">
    @foreach (Activity act in Activities)
    {
        var actType = ActivityType.GetActivityType(act.WorkoutType);
        <MudExpansionPanel Dense Style="@(act.IsWorkOut ? $"background: #c9a853" : "")">
            <TitleContent>
                <MudStack Row AlignItems="AlignItems.Center" Justify=Justify.SpaceBetween Spacing="0">
                    <IconText Icon="@actType.Icon"
                              Text="@actType.Name"
                              SubText="@($"Group: {GroupName}")" />
                    <MudStack Row AlignItems="AlignItems.Center" Spacing="4">
                        @if (act.Title is not null)
                        {
                            <MudChip Class="pa-2 mud-background">
                                <p>@act.Title</p>
                            </MudChip>
                        }
                        <MudStack Spacing="0" Justify="Justify.FlexEnd">
                            <MudStack Row
                                      Class="pr-10 py-2"
                                      Spacing="0"
                                      Justify="Justify.FlexEnd"
                                      AlignItems="AlignItems.Baseline">
                                <MudText Typo="Typo.h4">@(act.DurationSeconds / 60)</MudText>
                                <MudText Typo="Typo.body1">min</MudText>
                            </MudStack>
                        </MudStack>
                    </MudStack>
                </MudStack>
            </TitleContent>
            <ChildContent>
                <MudDivider />
                <MudStack Spacing="2" Class="mb-2 mt-2">
                    @if(!string.IsNullOrEmpty(act.Description))
                    {
                        <MudTextField Value="@act.Description"
                                      Label="Description"
                                      ReadOnly
                                      AutoGrow
                                      DisableUnderLine
                                      Variant="Variant.Filled"
                                      Margin=Margin.Dense />
                    }
                    @if (act.IsWorkOut && act.WorkoutItems.Count > 0)
                    {
                        <MudField Variant="Variant.Filled"
                                  Margin="Margin.Dense"
                                  DisableUnderLine
                                  Label="Workout Specs">
                            <MudStack Spacing="1" Class="pt-2">
                                @foreach (var workItem in act.WorkoutItems.OrderBy(item => item.Order))
                                {
                                    var workItemType = ActivityType.GetActivityType(workItem.WorkoutType);
                                    var distanceString = workItem.Distance is null ? "" : $" / {workItem.Distance} {workItem.DistanceMeasurment}";
                                    <MudStack Row AlignItems="AlignItems.Center">
                                        <MudTooltip Text="@workItemType.Name">
                                            <MudIcon Size="Size.Small" Icon="@workItemType.Icon" />
                                        </MudTooltip>
                                        <MudText>@($"{workItem.Time}{distanceString}")</MudText>
                                    </MudStack>
                                }
                            </MudStack>
                        </MudField>
                    }
                </MudStack>
            </ChildContent>
        </MudExpansionPanel>
    }
</MudExpansionPanels>

@code {
    [Parameter] public IEnumerable<Activity> Activities { get; set; } = [];
    [Parameter] public string GroupName { get; set; } = "";
}
